{"ast":null,"code":"var _jsxFileName = \"/Users/feng/Desktop/react-learning/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst notes = [{\n  id: 1,\n  content: 'HTML is easy',\n  date: '2019-05-30T17:30:31.098Z',\n  important: true\n}, {\n  id: 2,\n  content: 'Browser can execute only JavaScript',\n  date: '2019-05-30T18:39:34.091Z',\n  important: false\n}, {\n  id: 3,\n  content: 'GET and POST are the most important methods of HTTP protocol',\n  date: '2019-05-30T19:20:14.298Z',\n  important: true\n}];\nReactDOM.createRoot(document.getElementById('root')).render( /*#__PURE__*/_jsxDEV(App, {\n  notes: notes\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this));\nconst result = notes.map(note => {\n  /*#__PURE__*/_jsxDEV(\"li\", {\n    children: note.content\n  }, note.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n});\nconsole.log(result);","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","notes","id","content","date","important","createRoot","document","getElementById","render","fileName","_jsxFileName","lineNumber","columnNumber","result","map","note","children","console","log"],"sources":["/Users/feng/Desktop/react-learning/src/index.js"],"sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nimport App from './App'\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only JavaScript',\n    date: '2019-05-30T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2019-05-30T19:20:14.298Z',\n    important: true\n  }\n]\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <App notes={notes} />\n)\n\nconst result = notes.map((note)=>{\n    <li key={note.id}>{note.content}</li>\n})\nconsole.log(result);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AAEvC,OAAOC,GAAG,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,KAAK,GAAG,CACZ;EACEC,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,cAAc;EACvBC,IAAI,EAAE,0BAA0B;EAChCC,SAAS,EAAE;AACb,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,qCAAqC;EAC9CC,IAAI,EAAE,0BAA0B;EAChCC,SAAS,EAAE;AACb,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,OAAO,EAAE,8DAA8D;EACvEC,IAAI,EAAE,0BAA0B;EAChCC,SAAS,EAAE;AACb,CAAC,CACF;AAEDR,QAAQ,CAACS,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAACC,MAAM,eACzDT,OAAA,CAACF,GAAG;EAACG,KAAK,EAAEA;AAAM;EAAAS,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CACtB,CAAC;AAED,MAAMC,MAAM,GAAGb,KAAK,CAACc,GAAG,CAAEC,IAAI,IAAG;EAC7B,aAAAhB,OAAA;IAAAiB,QAAA,EAAmBD,IAAI,CAACb;EAAO,GAAtBa,IAAI,CAACd,EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAoB,CAAC;AACzC,CAAC,CAAC;AACFK,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}